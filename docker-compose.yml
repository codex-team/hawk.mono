version: "3.2"
services:
  api:
    build:
      dockerfile: "./docker/Dockerfile.dev"
      context: ./api
    user: "node"
    volumes:
      - ./api:/usr/src/app
      - ./api/.env:/usr/src/app/.env
      - api-deps:/usr/src/app/node_modules
    ports:
      - 4000:4000
    depends_on:
      - mongodb
    restart: unless-stopped
    stdin_open: true
    tty: true

  mongodb:
    image: mongo:6.0.2
    volumes:
      - mongodata:/data/db
      - mongo-config:/data/configdb
      - ./dump/:/dump/
    ports:
      - 27017:27017
    restart: unless-stopped

  garage:
    build:
      dockerfile: Dockerfile.dev
      context: ./garage
    volumes:
      - ./garage:/app
      - garage-deps:/app/node_modules
    ports:
      - 8080:8080
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./registry/config/rabbit.definitions.json:/tmp/rabbit.definitions.json:ro
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbitmq_management load_definitions "/tmp/rabbit.definitions.json"
    restart: unless-stopped

  collector:
    build: ./collector
    ports:
      - 3000:3000
    volumes:
      - ./collector/.env.docker:/app/.env
    depends_on:
      - rabbitmq
    restart: unless-stopped

  prom-pushgateway:
    image: prom/pushgateway
    ports:
      - 9091:9091
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - prom-pushgateway
    restart: unless-stopped

  cron-manager:
    build:
      dockerfile: docker/Dockerfile.dev
      context: ./cron-manager
    depends_on:
      - rabbitmq
    restart: unless-stopped
    volumes:
      - ./cron-manager:/usr/src/app
      - /usr/src/app/node_modules

  accounting:
    build:
      dockerfile: "./docker/Dockerfile.dev"
      context: ./accounting
    user: "node"
    volumes:
      - ./accounting:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3999:3999
    stdin_open: true
    restart: unless-stopped
    tty: true
    depends_on:
      - mongodb

  redis:
    image: redis:6.0.9
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    restart: unless-stopped

  yard:
    build:
      dockerfile: Dockerfile
      context: ./yard
    ports:
      - 3900:80
    restart: unless-stopped

volumes:
  mongodata:
  mongo-config:
  redis-data:
  api-deps:
  garage-deps:
